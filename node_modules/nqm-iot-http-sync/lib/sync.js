"use strict";

module.exports = (function() {
  var console = { log: require("debug")("sync") };
  var http = require("https");

  function HTTPSync(cfg) {
    this._config = cfg;
  }
  
  var getBearerToken = function(cb) {
    console.log("requesting bearer token");
    var self = this;
    var options = {
      hostname: this._config.syncServer,
      port: this._config.syncPort,
      path: "/token",
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Authorization": "Basic " + this._config.capability + ":" + this._config.secret
      }
    };
  
    var req = http.request(options, function (res) {
      var body = "";
    
      res.setEncoding("utf8");
      res.on("data", function(chunk) {
        body += chunk;
      });
      res.on("end", function() {
        if (res.statusCode === 200) {
          try {
            var result = JSON.parse(body);
            if (result.access_token) {
              console.log("got bearer token %s",result.access_token);
              cb(null, result.access_token);
            } else {
              cb(new Error("server failed request"), body);
            }
          } catch(e) {
            cb(new Error("corrupt server response: " + e.message));
          }
        } else {
          cb(new Error("bad request: " + body));
        }
      });
    });
  
    req.on("error", function(err) {
      cb(err);
    });
  
    req.write(JSON.stringify({
      "grant_type": "client_credentials"
    }));
  
    req.end();
  
  };

  HTTPSync.prototype.initialise = function(cb) {
    // Nothing to do .
    process.nextTick(cb);
  };

  HTTPSync.prototype.sendData = function(dataIn, cb) {
    var self = this;

    getBearerToken.call(this, function(err, bearerToken) {
      if (err) {
        cb(err);
      }
      var data = {
        hubId: self._config.hubId,
        payload: JSON.parse(dataIn)
      };
      console.log("sending %d bytes", dataIn.length);
  
      var options = {
        hostname: self._config.syncServer,
        port: self._config.syncPort,
        path: "/" + self._config.path,
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          "Authorization": "Bearer " + bearerToken
        }
      };
  
      var req = http.request(options, function(res) {
        var body = "";
    
        res.setEncoding("utf8");
        res.on("data", function(chunk) {
          body += chunk;
        });
        res.on("end", function() {
          try {
            var result = JSON.parse(body);
            if (result.error || res.statusCode !== 200) {
              cb(new Error("server failed request: " + result.error), result);
            } else {
              cb(null, result);
            }
          } catch(e) {
            if (res.statusCode !== 200) {
              cb(new Error("server failed request: " + body));
            } else {
              cb(new Error("corrupt server response: " + e.message));
            }
          }
        });
      });
  
      req.on("error", function(err) {
        cb(err);
      });
  
      req.write(JSON.stringify(data));
      req.end();
    });
  };

  HTTPSync.prototype.close = function() {
    // Nothing to do.
  };

  return HTTPSync;
}());
